/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vues;
import models.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author Andrianarivony Tamby
 */
public class ajoutpreter extends javax.swing.JFrame {

    /**
     * Creates new form ajoutpreter
     */
    private int montant_pret = 0;
    private String date_rendre ;
    
    public ajoutpreter() {
        initComponents();
        Calendar aujourdHui = Calendar.getInstance();
        datepreter.setDate(aujourdHui.getTime());
        remplirComboBox();
        lblnumpreter.setVisible(false);
        LocalDate today = LocalDate.now();

        // Définir le format de la date souhaité
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        // Convertir la date en chaîne de caractères
         date_rendre = today.format(formatter);
    }
     public ajoutpreter(String numpret,String numcompte, String montant_preter, String datepret) {
        initComponents();
        
        montant_pret = Integer.parseInt(montant_preter);
        cbnumcompte_preter.removeAllItems();
        
        cbnumcompte_preter.addItem(numcompte);
        
        txtmontantpreter.setText(montant_preter);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date date = dateFormat.parse(datepret);
            datepreter.setDate(date);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date invalide: " + e.getMessage());
        }
        btn_enregistrer_preter.setText("MODIFIER");
        lblpreter.setText("Modification du pret N:"+numpret);
        lblnumpreter.setText(numpret);
        lblnumpreter.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        lblpreter = new javax.swing.JLabel();
        lblnumpreter = new javax.swing.JLabel();
        txtmontantpreter = new javax.swing.JTextField();
        btn_enregistrer_preter = new javax.swing.JButton();
        btn_annuler_preter = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        datepreter = new com.toedter.calendar.JDateChooser();
        cbnumcompte_preter = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(190, 221, 226));
        setLocation(new java.awt.Point(1365, 223));
        setPreferredSize(new java.awt.Dimension(525, 660));

        jLabel3.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(45, 95, 95));
        jLabel3.setText("Date");

        lblpreter.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        lblpreter.setForeground(new java.awt.Color(45, 95, 95));
        lblpreter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblpreter.setText("Ajout Preter");

        lblnumpreter.setText("jLabel6");

        txtmontantpreter.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        txtmontantpreter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmontantpreterActionPerformed(evt);
            }
        });

        btn_enregistrer_preter.setBackground(new java.awt.Color(66, 173, 155));
        btn_enregistrer_preter.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        btn_enregistrer_preter.setForeground(new java.awt.Color(45, 95, 95));
        btn_enregistrer_preter.setText("Enregistrer");
        btn_enregistrer_preter.setFocusable(false);
        btn_enregistrer_preter.setPreferredSize(new java.awt.Dimension(200, 40));
        btn_enregistrer_preter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enregistrer_preterActionPerformed(evt);
            }
        });

        btn_annuler_preter.setBackground(new java.awt.Color(45, 95, 95));
        btn_annuler_preter.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        btn_annuler_preter.setForeground(new java.awt.Color(190, 221, 226));
        btn_annuler_preter.setText("Annuler");
        btn_annuler_preter.setFocusable(false);
        btn_annuler_preter.setPreferredSize(new java.awt.Dimension(200, 40));
        btn_annuler_preter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_annuler_preterActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(45, 95, 95));
        jLabel1.setText("Montant a preter");

        jLabel2.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(45, 95, 95));
        jLabel2.setText("Numero de compte ");

        datepreter.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N

        cbnumcompte_preter.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        cbnumcompte_preter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblnumpreter)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(datepreter, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbnumcompte_preter, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmontantpreter, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblpreter, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btn_enregistrer_preter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_annuler_preter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblpreter)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbnumcompte_preter, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtmontantpreter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datepreter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblnumpreter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_enregistrer_preter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_annuler_preter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void remplirComboBox() {
        try {
            Connection conn = models.MConnexion.SiConnectionDB();
            String sql = "SELECT numcompte FROM client"; // Modifier la requête selon vos besoins
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            cbnumcompte_preter.removeAllItems();
            
            while (rs.next()) 
            {
                String numcompte = rs.getString("numcompte");
                cbnumcompte_preter.addItem(numcompte);
            }

            rs.close();
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace(); // Affiche l'exception dans la console
        }
    }
    private void txtmontantpreterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmontantpreterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmontantpreterActionPerformed

    private void btn_enregistrer_preterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enregistrer_preterActionPerformed
       try {
    // Vérifier que tous les champs sont remplis
    if (txtmontantpreter.getText().isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Tous les champs doivent être remplis.", "Erreur de saisie", javax.swing.JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    int montant_preter = Integer.parseInt(txtmontantpreter.getText());
    if (montant_preter <= 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Veuillez entrer un montant valide.", "Erreur de saisie", javax.swing.JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Récupérer les données d'entrée des champs de texte
    String numCompte_pret_str = (String) cbnumcompte_preter.getSelectedItem();
    int numCompte_pret_int = Integer.parseInt(numCompte_pret_str);
    
    Date dateSelectionnee = datepreter.getDate();
    String datepret = "0000-00-00";

    if (dateSelectionnee != null) {
        SimpleDateFormat formatPourMySQL = new SimpleDateFormat("yyyy-MM-dd");
        datepret = formatPourMySQL.format(dateSelectionnee);
        System.out.println("Date formatée pour MySQL : " + datepret);
    } else {
        System.out.println("Aucune date sélectionnée.");
    }

    // Vérifier si le bouton indique "MODIFIER"
    if (btn_enregistrer_preter.getText().equals("MODIFIER")) {
        int numpreter = Integer.parseInt(lblnumpreter.getText());
        int montant_modif = montant_preter - montant_pret;
        models.MPreter modif = new models.MPreter(numpreter, montant_preter);
        models.MClient vola_rec = new models.MClient(numCompte_pret_int);

        int plus_env = vola_rec.montantmvmt() + montant_modif;
        modif.modifPreter();
        models.MClient modif_montant_rec = new models.MClient(numCompte_pret_int, plus_env);
        modif_montant_rec.modifClient_virement();

        javax.swing.JOptionPane.showMessageDialog(this, "Pret modifié avec succès.", "Succès", javax.swing.JOptionPane.INFORMATION_MESSAGE);
    } else {
        models.MPreter date_preter = new models.MPreter(numCompte_pret_int);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String datepret01 = date_preter.date_preter();

        if ("".equals(datepret01)) {
            models.MPreter ajout = new models.MPreter(numCompte_pret_int, montant_preter, datepret);
            double taux = 10.0 / 100.0;
            int montant_rendre = (int) (montant_preter * taux + montant_preter);
            int nb = JOptionPane.showConfirmDialog(null, "Le montant à rembourser sera " + montant_rendre + ".\nContinuer?", "Information", JOptionPane.YES_NO_OPTION);
            
            if (nb == JOptionPane.YES_OPTION) {
                javax.swing.JOptionPane.showMessageDialog(this, "Prêt effectué avec succès.", "Succès", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                ajout.ajoutPreter();
                models.MPreter numpreter = new models.MPreter(numCompte_pret_int, datepret);

                int num_pret = numpreter.num_pret();
                models.MRendre ajout_rendre = new models.MRendre(num_pret, 0, " payé une part", montant_rendre, datepret);
                ajout_rendre.ajoutRendre();
                models.MClient vola_env = new models.MClient(numCompte_pret_int);
                int plus_env = vola_env.montantmvmt() + montant_preter;
                models.MClient modif_montant_rec = new models.MClient(numCompte_pret_int, plus_env);
                modif_montant_rec.modifClient_virement();
                String nom_complet = vola_env.prenom_client() + " " + vola_env.nom_client();
                models.MPreter numpret = new models.MPreter(numCompte_pret_int, datepret);
                
                if (mail.sendMail(nom_complet, datepret, vola_env.mail_client(), numpret.num_pret(), numCompte_pret_int, montant_rendre, montant_preter)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "E-mail envoyé avec succès.", "Ajout réussi", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "E-mail non envoyé.", "Envoi échoué", javax.swing.JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            LocalDate date1base = LocalDate.parse(datepret01, formatter);
            LocalDate date2today = LocalDate.parse(datepret, formatter);

            if (date1base.isBefore(date2today)) {
                models.MPreter ajout = new models.MPreter(numCompte_pret_int, montant_preter, datepret);
                double taux = 10.0 / 100.0;
                int montant_rendre = (int) (montant_preter * taux + montant_preter);
                int nb = JOptionPane.showConfirmDialog(null, "Le montant à rembourser sera " + montant_rendre + ".\nContinuer?", "Information", JOptionPane.YES_NO_OPTION);

                if (nb == JOptionPane.YES_OPTION) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Prêt effectué avec succès.", "Succès", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    ajout.ajoutPreter();
                    models.MPreter numpreter = new models.MPreter(numCompte_pret_int, datepret);

                    int num_pret = numpreter.num_pret();
                    models.MRendre ajout_rendre = new models.MRendre(num_pret, 0, " payé une part", montant_rendre, datepret);
                    ajout_rendre.ajoutRendre();
                    models.MClient vola_env = new models.MClient(numCompte_pret_int);
                    int plus_env = vola_env.montantmvmt() + montant_preter;
                    models.MClient modif_montant_rec = new models.MClient(numCompte_pret_int, plus_env);
                    modif_montant_rec.modifClient_virement();
                    String nom_complet = vola_env.prenom_client() + " " + vola_env.nom_client();
                    models.MPreter numpret = new models.MPreter(numCompte_pret_int, datepret);

                    if (mail.sendMail(nom_complet, datepret, vola_env.mail_client(), numpret.num_pret(), numCompte_pret_int, montant_rendre, montant_preter)) {
                        javax.swing.JOptionPane.showMessageDialog(this, "E-mail envoyé avec succès.", "Ajout réussi", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(this, "E-mail non envoyé.", "Envoi échoué", javax.swing.JOptionPane.WARNING_MESSAGE);
                    }
                }
            } else if (date1base.isAfter(date2today)) {
                javax.swing.JOptionPane.showMessageDialog(this, "Le délai n'est pas valide.", "Ajout échoué", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Prêt non autorisé le même jour.", "Ajout échoué", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }

    // Actualiser l'affichage des clients dans l'autre interface
    vues.affichage loop = new vues.affichage();
    loop.clientaffiche();  // Actualiser la liste des clients

    // Fermer la fenêtre actuelle
    this.dispose();

    // Afficher un message de débogage dans la console
    System.out.println("coucou");
} catch (Exception e) {
    // Gérer toute autre exception
    System.err.println("Erreur : " + e.getMessage());
    javax.swing.JOptionPane.showMessageDialog(this, "Une erreur est survenue lors de l'ajout du client.", "Erreur", javax.swing.JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_btn_enregistrer_preterActionPerformed

    private void btn_annuler_preterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_annuler_preterActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_annuler_preterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ajoutpreter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ajoutpreter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ajoutpreter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ajoutpreter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ajoutpreter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_annuler_preter;
    private javax.swing.JButton btn_enregistrer_preter;
    private javax.swing.JComboBox<String> cbnumcompte_preter;
    private com.toedter.calendar.JDateChooser datepreter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblnumpreter;
    private javax.swing.JLabel lblpreter;
    private javax.swing.JTextField txtmontantpreter;
    // End of variables declaration//GEN-END:variables
}
