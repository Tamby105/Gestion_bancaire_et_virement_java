/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vues;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.*;

/**
 *
 * @author Andrianarivony Tamby
 */
public class ajoutrendre extends javax.swing.JFrame {
private int restepayer;
private int num_rendu;

    /**
     * Creates new form ajoutrendre
     */
    public ajoutrendre() {
        initComponents();
        Calendar aujourdHui = Calendar.getInstance();
        daterendu.setDate(aujourdHui.getTime());
        remplirComboBox();
        cbsituation.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedItem = (String) cbsituation.getSelectedItem();
                if (" Tout payé".equals(selectedItem)) {
                    toutpaye(); // Appeler la fonction taa() si "Oui" est sélectionné
                } else if (!"payé une part".equals(selectedItem)) {
                
                    restepaye(); // Appeler la fonction too() si "Non" est sélectionné
                }
            }
        });
    }
    public ajoutrendre(String num_rendre,String numpret_int,String situation,int montant_payee, String date_rendu)
    {
        initComponents();
        num_rendu = Integer.parseInt(num_rendre);
        restepayer = montant_payee;
        cbnumpret.removeAllItems();
        cbsituation.removeAllItems();
        cbnumpret.addItem(numpret_int);
        //cbsituation.addItem(situation);
        txtresteapayer.setText(Integer.toString(montant_payee));
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date date = dateFormat.parse(date_rendu);
            daterendu.setDate(date);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Format de date invalide: " + e.getMessage());
        }
        btn_enregistrer_rendre.setText("REMBOURSESR");
        cbsituation.removeAllItems();
            cbsituation.addItem(" Tout payé");
            cbsituation.addItem(" payé une part");
        cbsituation.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedItem = (String) cbsituation.getSelectedItem();
                if (" Tout payé".equals(selectedItem)) {
                    toutpaye(); // Appeler la fonction taa() si "Oui" est sélectionné
                } else if (!"payé une part".equals(selectedItem)) {
                
                    restepaye(); // Appeler la fonction too() si "Non" est sélectionné
                }
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblresteapayer = new javax.swing.JLabel();
        lbldaterendu = new javax.swing.JLabel();
        lblrendre = new javax.swing.JLabel();
        lblnumrendre = new javax.swing.JLabel();
        txtresteapayer = new javax.swing.JTextField();
        btn_enregistrer_rendre = new javax.swing.JButton();
        btn_annuler_rendre = new javax.swing.JButton();
        lblsituation = new javax.swing.JLabel();
        lblnumpret = new javax.swing.JLabel();
        daterendu = new com.toedter.calendar.JDateChooser();
        cbsituation = new javax.swing.JComboBox<>();
        cbnumpret = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(190, 221, 226));
        setFocusable(false);
        setLocation(new java.awt.Point(1365, 223));
        setPreferredSize(new java.awt.Dimension(520, 660));

        lblresteapayer.setBackground(new java.awt.Color(255, 255, 255));
        lblresteapayer.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        lblresteapayer.setForeground(new java.awt.Color(45, 95, 95));
        lblresteapayer.setText("Montant a payer");

        lbldaterendu.setBackground(new java.awt.Color(255, 255, 255));
        lbldaterendu.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        lbldaterendu.setForeground(new java.awt.Color(45, 95, 95));
        lbldaterendu.setText("Date rendu");

        lblrendre.setBackground(new java.awt.Color(255, 255, 255));
        lblrendre.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        lblrendre.setForeground(new java.awt.Color(45, 95, 95));
        lblrendre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblrendre.setText("Payment de pret");

        lblnumrendre.setText("jLabel6");

        txtresteapayer.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        txtresteapayer.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(45, 95, 95), 1, true));
        txtresteapayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtresteapayerActionPerformed(evt);
            }
        });

        btn_enregistrer_rendre.setBackground(new java.awt.Color(66, 173, 155));
        btn_enregistrer_rendre.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        btn_enregistrer_rendre.setForeground(new java.awt.Color(45, 95, 95));
        btn_enregistrer_rendre.setText("Enregistrer");
        btn_enregistrer_rendre.setFocusable(false);
        btn_enregistrer_rendre.setPreferredSize(new java.awt.Dimension(200, 40));
        btn_enregistrer_rendre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enregistrer_rendreActionPerformed(evt);
            }
        });

        btn_annuler_rendre.setBackground(new java.awt.Color(45, 95, 95));
        btn_annuler_rendre.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        btn_annuler_rendre.setForeground(new java.awt.Color(190, 221, 226));
        btn_annuler_rendre.setText("Annuler");
        btn_annuler_rendre.setFocusable(false);
        btn_annuler_rendre.setPreferredSize(new java.awt.Dimension(200, 40));
        btn_annuler_rendre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_annuler_rendreActionPerformed(evt);
            }
        });

        lblsituation.setBackground(new java.awt.Color(255, 255, 255));
        lblsituation.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        lblsituation.setForeground(new java.awt.Color(45, 95, 95));
        lblsituation.setText("Situation");

        lblnumpret.setBackground(new java.awt.Color(255, 255, 255));
        lblnumpret.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        lblnumpret.setForeground(new java.awt.Color(45, 95, 95));
        lblnumpret.setText("Numero pret");

        daterendu.setBackground(new java.awt.Color(255, 255, 255));
        daterendu.setFocusable(false);
        daterendu.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N

        cbsituation.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        cbsituation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbnumpret.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        cbnumpret.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblrendre, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtresteapayer, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblnumrendre, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblnumpret)
                            .addComponent(lbldaterendu)
                            .addComponent(lblresteapayer)
                            .addComponent(lblsituation)
                            .addComponent(daterendu, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbsituation, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btn_enregistrer_rendre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_annuler_rendre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addComponent(cbnumpret, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(61, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblrendre)
                .addGap(27, 27, 27)
                .addComponent(lblnumpret)
                .addGap(76, 76, 76)
                .addComponent(lblsituation)
                .addGap(12, 12, 12)
                .addComponent(cbsituation, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblresteapayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtresteapayer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblnumrendre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(lbldaterendu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(daterendu, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_enregistrer_rendre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_annuler_rendre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(117, 117, 117)
                    .addComponent(cbnumpret, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(410, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void toutpaye() 
    {
        
        int money_int = restepayer;
        System.out.println( money_int);
        txtresteapayer.setText(String.valueOf(money_int));
            
    }
    private void restepaye() 
    {
        
        lblnumrendre.setText("A payer :"+restepayer+" Ar");
        txtresteapayer.setText("");
    
    }
    
    private void txtresteapayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtresteapayerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtresteapayerActionPerformed
    
     private void remplirComboBox() {
        try {
            Connection conn = models.MConnexion.SiConnectionDB();
            String sql = "SELECT num_pret FROM preter"; // Modifier la requête selon vos besoins
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            cbnumpret.removeAllItems();
            cbsituation.removeAllItems();
            cbsituation.addItem(" Tout payé");
            cbsituation.addItem(" payé une part");
            while (rs.next()) {
                String numcompte = rs.getString("num_pret");
                cbnumpret.addItem(numcompte);
                

            }

            rs.close();
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace(); // Affiche l'exception dans la console
        }
    }
    private void btn_enregistrer_rendreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enregistrer_rendreActionPerformed
        try {
            // Vérifier que tous les champs sont remplis
            if (txtresteapayer.getText().isEmpty() ) {
                javax.swing.JOptionPane.showMessageDialog(this, "Tous les champs doivent être remplis.", "Erreur de saisie", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            int montant = Integer.parseInt(txtresteapayer.getText());

            if(montant <=0)
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Veuillez entrer un montant valide.", "Erreur de saisie", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            Date dateSelectionnee = daterendu.getDate();
            String daterendu = "0000-00-00" ;
            if (dateSelectionnee != null)
                {
                    SimpleDateFormat formatPourMySQL = new SimpleDateFormat("yyyy-MM-dd");
                    daterendu = formatPourMySQL.format(dateSelectionnee);

                    // Utiliser 'dateFormatee' pour l'insertion ou la mise à jour dans MySQL
                    System.out.println("Date formatée pour MySQL : " + daterendu);
                } 
            else
                {
                    System.out.println("Aucune date sélectionnée.");
                }
            // Récupérer les données d'entrée des champs de texte
            String numpret = (String) cbnumpret.getSelectedItem();
            String situation = (String) cbsituation.getSelectedItem();
            
            
            //int numcompte=Integer.parseInt(lblnumrendre.getText());
            // Créer une nouvelle instance de MClient avec les entrées fournies
            if(btn_enregistrer_rendre.getText().equals("REMBOURSESR"))
            {   
                if(montant>restepayer)
                {
                    javax.swing.JOptionPane.showMessageDialog(this, "Le montant depasse le reste a payer!", "Information", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                
                int numpret_int=Integer.parseInt(numpret);
                models.MRendre dejp = new models.MRendre(numpret_int);
                int deja_payee =dejp.somme_deja_payee();
                models.MPreter money_mod = new models.MPreter(numpret_int);
                models.MClient vola_rec = new models.MClient(money_mod.numcompte_pret());
                
                if(vola_rec.montantmvmt()<montant)
                {
                    javax.swing.JOptionPane.showMessageDialog(this, "Solde insuffisant.", "Erreur!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
                int soldemvt =vola_rec.montantmvmt() - montant;
                int modif_rendre = restepayer - montant;
                
                if(modif_rendre ==0)
                {
                situation =" Tout payé";
                
                }
                deja_payee = dejp.somme_deja_payee()+montant;
                // //int num_pret=montant_rendu,int montant_rendu=num_rendu,String situation,int rest_paye
                models.MRendre modif = new models.MRendre(deja_payee, num_rendu, situation, modif_rendre);
                modif.modifRendre();
                models.MClient modif_montant_rec = new models.MClient(money_mod.numcompte_pret(),soldemvt);
                modif_montant_rec.modifClient_virement();
                javax.swing.JOptionPane.showMessageDialog(this, "Remboursement avec succès.", "Succès", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            }
            else
            {//AJOUTER
                
                int numpret_int=Integer.parseInt(numpret);
                models.MPreter money_mod = new models.MPreter(numpret_int);
                //taux 10%
                double taux = 10.0 / 100.0;
                //total vola aloha
                int money_int = (int) (money_mod.montantpret() * taux + money_mod.montantpret());
                //vole efa voahefa
                models.MRendre dejp = new models.MRendre(numpret_int);
                int deja_payee =dejp.somme_deja_payee();
                
                int reste_a_payer = money_int - deja_payee - montant;
                //teste si montant deja payee est egale a la totale
                if(money_int == deja_payee)
                {
                    javax.swing.JOptionPane.showMessageDialog(this, "Le pret est deja remboursee en totalite!.", "Information", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                //changement de la situation si le pret est rmboursee en totalite
                if(money_int == deja_payee + montant)
                {
                    situation =" Tout payé";
                }
                if(reste_a_payer<0)
                {
                    javax.swing.JOptionPane.showMessageDialog(this, "Le montant depasse le reste a payer!", "Information", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                
                models.MRendre ajout = new models.MRendre(numpret_int, montant, situation, reste_a_payer, daterendu);

                // Ajouter le nouveau client à la base de données
                // CHECKER LE SOLDEMVMT DU CLIENT AVANT REMBOURSEMENT DU PRET
                models.MClient vola_rec = new models.MClient(money_mod.numcompte_pret());
                    
                    if(vola_rec.montantmvmt() < montant)
                    {
                    javax.swing.JOptionPane.showMessageDialog(this, "Solde insuffisant.", "Erreur!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                    }
                ajout.ajoutRendre();
                int plus_env =  vola_rec.montantmvmt() - montant ;
                //MISE A JOUR TABLE CLIENT
                models.MClient modif_montant_rec = new models.MClient(money_mod.numcompte_pret(),plus_env);
                modif_montant_rec.modifClient_virement();
                // Afficher un message de succès
                //javax.swing.JOptionPane.showMessageDialog(this, "Client ajouté avec succès.", "Succès", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
            // Actualiser l'affichage des clients dans l'autre interface
            vues.affichage loop = new vues.affichage();
            loop.clientaffiche();  // Actualiser la liste des clients

            // Fermer la fenêtre actuelle
            this.dispose();

            // Afficher un message de débogage dans la console
            System.out.println("coucou");
        }  catch (Exception e) {
            // Gérer toute autre exception
            System.err.println("Erreur : " + e.getMessage());
            javax.swing.JOptionPane.showMessageDialog(this, "Une erreur est survenue lors de l'ajout du client.", "Erreur", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_enregistrer_rendreActionPerformed

    private void btn_annuler_rendreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_annuler_rendreActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_annuler_rendreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ajoutrendre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ajoutrendre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ajoutrendre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ajoutrendre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ajoutrendre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_annuler_rendre;
    private javax.swing.JButton btn_enregistrer_rendre;
    private javax.swing.JComboBox<String> cbnumpret;
    private javax.swing.JComboBox<String> cbsituation;
    private com.toedter.calendar.JDateChooser daterendu;
    private javax.swing.JLabel lbldaterendu;
    private javax.swing.JLabel lblnumpret;
    private javax.swing.JLabel lblnumrendre;
    private javax.swing.JLabel lblrendre;
    private javax.swing.JLabel lblresteapayer;
    private javax.swing.JLabel lblsituation;
    private javax.swing.JTextField txtresteapayer;
    // End of variables declaration//GEN-END:variables
}
